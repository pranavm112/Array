class Solution {
public:
    int clumsy(int n) {
        std::stack<int> stk;
        int index = 0;  // This will help in cycling through *, /, +, -

        // Start by pushing the first number onto the stack
        stk.push(n);
        n--;

        // Apply the operations
        while (n > 0) {
            if (index % 4 == 0) {
                stk.top() *= n;  // Multiplication
            } else if (index % 4 == 1) {
                stk.top() /= n;  // Division (integer division)
            } else if (index % 4 == 2) {
                stk.push(n);  // Addition (push positive number)
            } else {
                stk.push(-n);  // Subtraction (push negative number)
            }
            index++;
            n--;
        }

        // Sum all elements in the stack to get the final result
        int result = 0;
        while (!stk.empty()) {
            result += stk.top();
            stk.pop();
        }

        return result;
        
    
    }
};
