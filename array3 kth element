class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {


    /*
    sort(nums.begin(),nums.end());   // <-- Gives time complaexity of nlogn
    int n=nums.size();
    return nums[n-k];                //  <-- give time complexity of O(1)
    }
    */

    // Create Max heap <-- O(1)
    // Then extract top elementt, k times  <-- klogn complexity

    priority_queue<int>pq(nums.begin(),nums.end());
    int ans = 0;
    while(k--){
        ans = pq.top();
        pq.pop();
    }
    return ans;
    }
};
